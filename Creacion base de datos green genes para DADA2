##---------------Cargar librerias correspondientes---------------------------------------------------##
library(Biostrings)
library(ShortRead)
library(dada2)

##--------------Ruta donde aparecera el archivo creado----------------------------------------------##
setwd("~/Desktop/GG2/final")

##--------------Descarga de base de datos greengenes------------------------------------------------##
download.file("http://ftp.microbio.me/greengenes_release/current/2022.10.backbone.full-length.fna.qza", 
              "2022.10.backbone.full-length.fna.qza")
download.file("http://ftp.microbio.me/greengenes_release/current/2022.10.backbone.tax.qza",
              "2022.10.backbone.tax.qza")

##-------------Descomprimir la base de datos descargada--------------------------------------------##
unzip("2022.10.backbone.full-length.fna.qza")
unzip("2022.10.backbone.tax.qza")
fn <- "a53d9300-5c5c-4774-a2e8-a5e23904f1ae/data/dna-sequences.fasta"
txfn <- "c16a953c-f24d-4d14-927c-40d90ced395e/data/taxonomy.tsv"

##----taxonomia esta en la segunda columna, id y taxonomia, taxonomia esta en 7 niveles, dominio -- especie ----##
sq <- getSequences(fn)
tdf <- read.csv(txfn, sep="\t", header=TRUE)
tax <- tdf[,2]
names(tax) <- tdf[,1]

identical(names(sq), names(tax)) # TRUE

##----------------------Analisis de las taxomonias de cadena de identificacion--------------------------##
taxes <- strsplit(tax, "; ")
tax.depth <- sapply(taxes, length)
table(tax.depth) 
# Todas las taxonomias estan dentro de 7 niveles
# Nota: Un número significativo de niveles taxonómicos no asignados aquí, que están codificados como e.g. "g__"
# Nota: La especie tiene el nombre de género duplicado, es decir, el nivel de especie tiene género [ESPACIO] especie binomial, en lugar de solo especie

##--------------------------Removiendo el genero de la asignacion de especie-----------------------------------------##
for(i in seq(length(taxes))) {
  gen <- taxes[[i]][[6]]
  gen <- substr(gen, 4, nchar(gen))
  taxes[[i]][[7]] <- gsub(gen, "", taxes[[i]][[7]])
  taxes[[i]][[7]] <- gsub("__ ", "__", taxes[[i]][[7]])
}

##--------------------------Identificacion de niveles taxonomicos no asignados---------------------------------------##
tax_pre <- c("d__", "p__", "c__", "o__", "f__", "g__", "s__")
is.unassigned <- sapply(taxes, function(tx) {
  tx == tax_pre
}) |> t()
# Nota: Un número relativo de entradas tienen niveles taxonomicos más bajos asignados, aunque no se asignan niveles mas altos 
# e.g. `MJ030-2-barcode58-umi83452bins-ubs-6`, que esta asignado s__Spirochaeta aurantia, but "o__;f__;g__" para la designacion de orden/familia/genero 
# Estas asignaciones se eliminaran con la prueda de `assignTaxonomy`
tax.depth <- apply(is.unassigned, 1, function(isu) { min(which(isu)-1L, 7L) })
tax.ids <- sapply(seq_along(taxes), function(i) {
  td <- tax.depth[[i]]
  id.str <- paste(taxes[[i]][1:td], collapse=";")
  id.str <- paste0(id.str, ";") # Add terminal semicolon
  id.str
})
names(tax.ids) <- names(taxes)

##----------------------------Creando el archivo fasta de entrenamiento---------------------------------------------##
sq.out <- sq
names(sq.out) <- tax.ids
writeFasta(sq.out, "greengenes2_trainset.fa.gz", compress=TRUE)

##-------------------------Prueba de los resultados de `assignTaxonomy` en este archivo creado recientemente---------------##
dada2:::tax.check("greengenes2_trainset.fa.gz", fn.test=system.file("extdata", "ten_16s.100.fa.gz", package="dada2"))
